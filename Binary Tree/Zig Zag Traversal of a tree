
class GFG
{
    //Function to store the zig zag order traversal of tree in a list.
	ArrayList<Integer> zigZagTraversal(Node root)
	{
	    //Add your code here.
	    ArrayList <Integer> ans = new ArrayList<>();
	    
	    Queue<Node> q = new LinkedList<>();
	    
	    q.add(root);
	    int l=1;
	    
	    while(!q.isEmpty()){
	        ArrayList<Integer> arr = new ArrayList<>();
	      
	        int sz = q.size();
	        while(sz-->0){
	            Node st = q.peek();
	            q.poll();
	              arr.add(st.data);
	              
	            if(st!=null&&st.left!=null){
	                q.add(st.left);
	            }
	            if(st!=null&&st.right!=null){
	                q.add(st.right);
	            }
	        }
	        if(l%2==0)Collections.reverse(arr);
	        int n = arr.size() ;
	        for(int i=0; i<n; ++i){
	            ans.add(arr.get(i));
	        }
	        l++;
	    }
	
	    return ans;
	}
}